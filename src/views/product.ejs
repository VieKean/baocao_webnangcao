<!-- product.ejs -->
 <style>
    /* Ensure that the Actions column has enough width */
table th:nth-child(8), table td:nth-child(8) {
    width: 200px; /* Adjust width as needed */
}

 </style>
<div class="mt-5">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">
                        Product List
                    </h3>
                </div>
                <div class="card-body">
                    <button type="button" class="btn btn-success mb-3" data-bs-toggle="modal" data-bs-target="#createProductModal">
                        Create New Product
                    </button>

                    <table class="table table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Image</th>
                                <th>Description</th>
                                <th>Category</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (let i = 0; i < data.rows.length; i++) { 
                                const product = data.rows[i]; 
                                const category = product.Category ? product.Category.category_name : 'Unknown';
                            %>
                                <tr>
                                    <td><%= i + 1 %></td>
                                    <td><%= product.product_name %></td>
                                    <td><%= product.price %></td>
                                    <td><%= product.quantity %></td>
                                    <td><img src="<%= product.image %>" alt="<%= product.product_name %>" style="width: 100px;"></td>
                                    <td><%= product.description %></td>
                                    <td><%= category %></td>
                                    <td>
                                        <a href="/product/edit/<%= product.id %>" class="btn btn-warning btn-sm">Edit</a>
                                        <button type="button" 
                                            class="btn btn-danger btn-sm delete-btn" 
                                            data-bs-toggle="popover"
                                            data-bs-html="true" 
                                            data-product-id="<%= product.id %>"
                                            data-bs-content="
                                                <div class='popover-content'>
                                                    <p>Are you sure you want to delete this product?</p>
                                                    <div class='d-flex justify-content-between'>
                                                        <button type='button' class='btn btn-secondary btn-sm cancel-delete'>Cancel</button>
                                                        <button type='button' class='btn btn-danger btn-sm confirm-delete' data-id='<%= product.id %>'>Delete</button>
                                                    </div>
                                                </div>
                                            "
                                            title="Confirm Delete">
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Create New Product -->
<div class="modal fade" id="createProductModal" tabindex="-1" aria-labelledby="createProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createProductModalLabel">Create New Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createProductForm" action="/product/create-product" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="product_name" required>
                    </div>
                    <div class="mb-3">
                        <label for="productPrice" class="form-label">Price</label>
                        <input type="number" class="form-control" id="productPrice" name="price" required>
                    </div>
                    <div class="mb-3">
                        <label for="productQuantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="productQuantity" name="quantity" required>
                    </div>
                    <div class="mb-3">
                        <label for="productImage" class="form-label">Image</label>
                        <input type="file" class="form-control" id="productImage" name="image" accept="image/*" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="productDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="productDescription" name="description" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="productCategory" class="form-label">Category</label>
                        <select class="form-control" id="productCategory" name="category_id" required>
                            <% categories.forEach(function(category) { %>
                                <option value="<%= category.id %>"><%= category.category_name %></option>
                            <% }); %>
                        </select>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Create Product</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS and Popper.js -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Khởi tạo popovers
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
        var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                html: true,
                sanitize: false,
                trigger: 'manual' // Thêm dòng này
            });
        });

        // Xử lý click cho nút delete để hiển thị popover
        document.querySelectorAll('.delete-btn').forEach(function(btn) {
            btn.addEventListener('click', function() {
                // Ẩn tất cả popover khác
                popoverTriggerList.forEach(function(el) {
                    if (el !== btn) {
                        const p = bootstrap.Popover.getInstance(el);
                        if (p) p.hide();
                    }
                });
                
                // Toggle popover hiện tại
                const popover = bootstrap.Popover.getInstance(btn);
                popover.toggle();
            });
        });

        // Xử lý click cho toàn bộ document
        document.addEventListener('click', function(event) {
            const target = event.target;

            // Xử lý nút confirm delete
            if (target.matches('.confirm-delete')) {
                const productId = target.getAttribute('data-id');
                if (productId) {
                    window.location.href = '/product/delete/' + productId;
                }
            }
            
            // Xử lý nút cancel
            if (target.matches('.cancel-delete')) {
                const row = target.closest('.popover');
                if (row) {
                    popoverTriggerList.forEach(function(el) {
                        const popover = bootstrap.Popover.getInstance(el);
                        if (popover) popover.hide();
                    });
                }
            }

            // Đóng popover khi click ra ngoài
            if (!target.closest('.popover') && !target.matches('.delete-btn')) {
                popoverTriggerList.forEach(function(el) {
                    const popover = bootstrap.Popover.getInstance(el);
                    if (popover) popover.hide();
                });
            }
        });

        // Đóng popover khi nhấn ESC
        document.addEventListener('keyup', function(event) {
            if (event.key === 'Escape') {
                popoverTriggerList.forEach(function(el) {
                    const popover = bootstrap.Popover.getInstance(el);
                    if (popover) popover.hide();
                });
            }
        });
    });
</script>
